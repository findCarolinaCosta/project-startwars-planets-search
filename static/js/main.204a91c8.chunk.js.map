{"version":3,"sources":["services/fetchPlanets.js","Context/PlanetsProvider.js","components/FilterField.js","components/LoadingInitial.js","components/SortField.js","components/TableRows.js","components/PlanetInfos.js","helpers/getFilterByNumericValues.js","helpers/getSort.js","components/Table.js","App.js","index.js"],"names":["fetchPlanets","a","fetch","response","json","results","ok","Promise","resolve","reject","console","log","Context","createContext","Provider","Consumer","PlanetsProvider","children","useState","data","setData","filterByName","setFilterByName","filtered","setFiltered","filterByNumericValues","setFilterByNumericValues","order","setOrder","setDataResponse","useEffect","context","value","INITIAL_OPTIONS_COLUMN","FilterField","useContext","column","setColumn","comparison","setComparison","setValue","optionColumn","setOptionColumn","arrFilter","setArrFilter","className","onChange","target","data-testid","placeholder","htmlFor","id","name","event","setColumnInfos","map","option","key","type","onClick","prevState","newArrayOptions","filter","item","Math","random","toString","substr","state","length","focusable","viewBox","aria-hidden","d","LoadingInitial","timer","setTimeout","document","scrollingElement","scroll","clearTimeout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","transform","strokeDasharray","strokeDashoffset","x","y","textLength","lengthAdjust","textAnchor","SortField","selectedRadio","setSelectedRadio","chosenColumn","setChosenColumn","handleChange","sort","TableRows","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","PlanetInfos","Number","getFilterByNumericValues","includes","prevPlanet","nextPlanet","localeCompare","getSort","planetFilterByNumeric","index","Table","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.204a91c8.chunk.js","sourcesContent":["export default async function fetchPlanets() {\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  try {\n    const response = await fetch(URL);\n    const { results } = await response.json();\n    return response.ok ? Promise.resolve(results) : Promise.reject(results);\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchPlanets from '../services/fetchPlanets';\n\n// Provider, Consumer, Context \"global\" no mesmo arquivo, porque estão relacionados e melhora a manipulação\n\nconst Context = createContext();\nconst { Provider, Consumer } = Context;\n\nfunction PlanetsProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filterByName, setFilterByName] = useState('');\n  const [filtered, setFiltered] = useState(false);\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({});\n\n  const setDataResponse = async () => {\n    setData(await fetchPlanets());\n  };\n\n  useEffect(() => {\n    setDataResponse();\n  }, []);\n\n  const context = {\n    data,\n    filterByName,\n    setFilterByName,\n    filtered,\n    setFiltered,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n  };\n\n  return (\n    <Provider value={ context }>\n      {children}\n    </Provider>\n  );\n}\n\nexport { PlanetsProvider as Provider, Consumer, Context };\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext, useState } from 'react';\nimport { Context } from '../Context/PlanetsProvider';\n\nexport const INITIAL_OPTIONS_COLUMN = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\nconst maxDecimalPlaces = 9;\n\nfunction FilterField() {\n  const {\n    filterByName,\n    setFilterByName,\n    setFiltered,\n    setFilterByNumericValues,\n  } = useContext(Context);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [optionColumn, setOptionColumn] = useState(INITIAL_OPTIONS_COLUMN);\n  const [arrFilter, setArrFilter] = useState([]);\n\n  const handleChange = ({ target }) => {\n    setFilterByName(target.value);\n  };\n\n  const handleClick = () => {\n    setFiltered(true);\n    setFilterByNumericValues({ column, comparison, value });\n    setArrFilter((prevState) => [...prevState, { column, comparison, value }]);\n    setColumn('population');\n    setComparison('maior que');\n    setValue('0');\n    const newArrayOptions = optionColumn.filter((option) => option !== column);\n    setOptionColumn(newArrayOptions);\n  };\n\n  const setColumnInfos = ({ target }) => {\n    setColumn(target.value);\n  };\n\n  const removeFilter = (name) => {\n    setArrFilter((prevState) => prevState.filter((state) => state.column !== name)); // remove item com base no name do botão\n    setOptionColumn((prevState) => [...prevState, name]); // volta a option para o select da coluna de filtro\n    setFilterByNumericValues([arrFilter[arrFilter.length - 1]]); // renderiza filtro anterior\n  };\n\n  return (\n    <section className=\"flex p-4 align-middle flex-col\">\n      <div className=\"m-auto p-5\">\n        <input\n          value={ filterByName }\n          onChange={ handleChange }\n          data-testid=\"name-filter\"\n          placeholder=\"Filtro pelo nome do planeta\"\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"flex justify-center w-10/12 gap-5 self-center items-center\">\n        <p className=\"self-center\">Filtre por:</p>\n        <label htmlFor=\"select-option\" className=\"self-center\">\n          <select\n            id=\"select-option\"\n            data-testid=\"column-filter\"\n            name=\"column\"\n            onChange={ (event) => setColumnInfos(event) }\n            value={ column }\n            className=\"form-select\"\n          >\n            {optionColumn.map((option) => (\n              <option key={ option }>{option}</option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"select-comparison\" className=\"self-center\">\n          <select\n            id=\"select-comparison\"\n            data-testid=\"comparison-filter\"\n            name=\"comparison\"\n            onChange={ (event) => setComparison(event.target.value) }\n            value={ comparison }\n            className=\"form-select\"\n          >\n            <option>maior que</option>\n            <option>menor que</option>\n            <option>igual a</option>\n          </select>\n        </label>\n        <input\n          type=\"number\"\n          data-testid=\"value-filter\"\n          placeholder=\"Digite um valor\"\n          name=\"value\"\n          value={ value }\n          onChange={ (event) => setValue(event.target.value) }\n          className=\"form-control w-25\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ handleClick }\n          className=\"btn btn-info\"\n        >\n          Filtrar\n        </button>\n      </div>\n      <div>\n        {arrFilter.map((item) => (\n          <div\n            key={ Math.random().toString().substr(2, maxDecimalPlaces) }\n            data-testid=\"filter\"\n          >\n            <span className=\"align-middle\">\n              {`${item.column}\n                  ${item.comparison} ${item.value}`}\n            </span>\n            <button type=\"button\" onClick={ () => removeFilter(item.column) }>\n              <svg\n                className=\"svg-icon-trash\"\n                focusable=\"false\"\n                viewBox=\"0 0 24 24\"\n                aria-hidden=\"true\"\n                data-testid=\"DeleteIcon\"\n              >\n                <path\n                  d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0\n                    2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n                />\n\n              </svg>\n            </button>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default FilterField;\n","import React, { useEffect } from 'react';\n\nfunction LoadingInitial() {\n  useEffect(() => {\n    const scrollY = 1000;\n    const waitingTime = 3600;\n    const timer = setTimeout(() => document.scrollingElement.scroll(0, scrollY),\n      waitingTime);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n  return (\n    <div className=\"div__loading-initial bg-black flex min-h-screen\">\n      <svg viewBox=\"0 0 100 75\" className=\"m-auto max-w-screen-sm block\">\n        <g\n          stroke=\"rgb(13, 202, 240)\"\n          strokeWidth=\"1\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          fill=\"none\"\n        >\n          <g transform=\"translate(9 10.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 10 h 8 a 7 7 0 0 0 0 -14 h 9 v -6 h -10 a 7 7 0 0 0 0 14 h -10 v 6 z\"\n              className=\"svg__letters-1\"\n            />\n          </g>\n          <g transform=\"translate(30 10.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 -10 h 20 v 6 h -7 v 15 h -6 v -15 h -7 z\"\n              className=\"svg__letters-2\"\n            />\n          </g>\n          <g transform=\"translate(51 10.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 10 l 7 -20 h 6 l 7 20 h -6 l -1.05 -3 h -5.9 l -1.05 3 z\"\n              className=\"svg__letters-3\"\n            />\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 8 2 h 4 l -2 -5.7 -2 5.7 z\"\n              className=\"svg__letters-3\"\n            />\n          </g>\n          <g transform=\"translate(76 10.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 -10 h 12 a 7 7 0 0 1 0 14 l 5 6 h -7 l -5 -6 v 6 h -5.5 z\"\n              className=\"svg__letters-4\"\n            />\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 5 -5 h 5 a 2 2 0 0 1 0 4 h -5 z\"\n              className=\"svg__letters-4\"\n            />\n          </g>\n          <g transform=\"translate(0.5 35.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 -10 l 7 20 h 6 l 1.75 -5 1.75 5 h 6 l 7 -20 h -7 l -2.375\n              6.8 -2.375 -6.8 h -6 l -2.375 6.8 -2.375 -6.8 h -7z\"\n              className=\"svg__letters-5\"\n            />\n          </g>\n          <g transform=\"translate(30 35.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 10 l 7 -20 h 6 l 7 20 h -6 l -1.05 -3 h -5.9 l -1.05 3 z\"\n              className=\"svg__letters-6\"\n            />\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 8 2 h 4 l -2 -5.7 -2 5.7 z\"\n              className=\"svg__letters-6\"\n            />\n          </g>\n          <g transform=\"translate(56 35.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 -10 h 12 a 7 7 0 0 1 0 14 l 5 6 h -7 l -5 -6 v 6 h -5.5 z\"\n              className=\"svg__letters-7\"\n            />\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 5 -5 h 5 a 2 2 0 0 1 0 4 h -5 z\"\n              className=\"svg__letters-7\"\n            />\n          </g>\n          <g transform=\"translate(82.5 35.5)\">\n            <path\n              strokeDasharray=\"200\"\n              strokeDashoffset=\"200\"\n              d=\"M 0 10 h 8 a 7 7 0 0 0 0 -14 h 9 v -6 h -10 a 7 7 0 0 0 0 14 h -10 v 6 z\"\n              className=\"svg__letters-8\"\n            />\n          </g>\n        </g>\n        <g>\n          <text\n            x=\"50\"\n            y=\"55\"\n            textLength=\"100\"\n            lengthAdjust=\"spacing\"\n            textAnchor=\"middle\"\n            fill=\"hsl(0, 0%, 100%)\"\n            className=\"text__planets\"\n          >\n            Planets\n\n          </text>\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default LoadingInitial;\n","import React, { useContext, useState } from 'react';\nimport { Context } from '../Context/PlanetsProvider';\nimport { INITIAL_OPTIONS_COLUMN } from './FilterField';\n\nfunction SortField() {\n  const { setOrder } = useContext(Context);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const [chosenColumn, setChosenColumn] = useState('');\n\n  const handleChange = ({ target }) => {\n    setSelectedRadio(target.value);\n  };\n\n  const handleClick = () => {\n    setOrder((prevState) => ({\n      ...prevState,\n      column: chosenColumn,\n      sort: selectedRadio,\n    }));\n  };\n\n  return (\n    <div className=\"flex p-4 align-middle justify-center gap-5\">\n      <p className=\"self-center\">Ordenar:</p>\n      <label htmlFor=\"option__order\" className=\"self-center\">\n        <select\n          id=\"option__order\"\n          data-testid=\"column-sort\"\n          name=\"column\"\n          onChange={ ({ target }) => setChosenColumn(target.value) }\n          value={ chosenColumn }\n          className=\"form-select\"\n        >\n          {INITIAL_OPTIONS_COLUMN\n            .map((option) => <option key={ option }>{option}</option>)}\n        </select>\n      </label>\n      <label htmlFor=\"sort__asc\" className=\"self-center\">\n        <input\n          name=\"opcao\"\n          id=\"sort__asc\"\n          type=\"radio\"\n          data-testid=\"column-sort-input-asc\"\n          value=\"ASC\"\n          onChange={ handleChange }\n          className=\"form-check-input\"\n        />\n        Ascendente\n      </label>\n      <label htmlFor=\"sort__dsc\" className=\"self-center\">\n        <input\n          name=\"opcao\"\n          id=\"sort__dsc\"\n          type=\"radio\"\n          data-testid=\"column-sort-input-desc\"\n          value=\"DESC\"\n          onChange={ handleChange }\n          className=\"form-check-input\"\n        />\n        Descendente\n      </label>\n      <button\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        onClick={ handleClick }\n        className=\"btn btn-info\"\n      >\n        Ordenar\n      </button>\n    </div>\n  );\n}\n\nexport default SortField;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction TableRows({ planet }) {\n  return (\n    <>\n      <td data-testid=\"planet-name\">{ planet.name }</td>\n      <td>{ planet.rotation_period }</td>\n      <td>{ planet.orbital_period }</td>\n      <td>{ planet.diameter }</td>\n      <td>{ planet.climate }</td>\n      <td>{ planet.gravity }</td>\n      <td>{ planet.terrain }</td>\n      <td>{ planet.surface_water }</td>\n      <td>{ planet.population }</td>\n      <td>{ planet.films }</td>\n      <td>{ planet.created }</td>\n      <td>{ planet.edited }</td>\n      <td>{ planet.url }</td>\n    </>\n  );\n}\n\nTableRows.propTypes = {\n  planet: PropTypes.shape({\n    climate: PropTypes.string,\n    created: PropTypes.string,\n    diameter: PropTypes.string,\n    films: PropTypes.arrayOf(PropTypes.string),\n    gravity: PropTypes.string,\n    name: PropTypes.string,\n    orbital_period: PropTypes.string,\n    population: PropTypes.string,\n    rotation_period: PropTypes.string,\n    surface_water: PropTypes.string,\n    terrain: PropTypes.string,\n    edited: PropTypes.string,\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TableRows;\n","import React, { useContext } from 'react';\nimport { Context } from '../Context/PlanetsProvider';\nimport getFilterByNumericValues from '../helpers/getFilterByNumericValues';\nimport getSort from '../helpers/getSort';\nimport TableRows from './TableRows';\n\nfunction PlanetInfos() {\n  const {\n    data,\n    filterByName,\n    filtered,\n    filterByNumericValues,\n    order,\n  } = useContext(Context);\n  const maxDecimalPlaces = 9;\n\n  return (\n    <tbody>\n      {(!filtered && filterByName === '' && !order.column) ? (\n        data\n          // ordena como padrão os planetas\n          .sort((prevPlanet, nextPlanet) => prevPlanet\n            .name.localeCompare(nextPlanet.name))\n          // retorna as linhas da tabela\n          .map((planet, index) => (\n            <tr\n              key={ Math.random().toString().substr(2, maxDecimalPlaces) }\n              className={ index % 2 === 0 ? 'table-active table__row' : 'table__row' }\n            >\n              <TableRows planet={ planet } />\n            </tr>\n          ))\n      )\n        : (\n          data\n            // filtra por valores numéricos\n            .filter((planet) => getFilterByNumericValues(planet, filterByNumericValues))\n            // filtra pelo nome\n            .filter(({ name }) => (filterByName !== ''\n              ? name.includes(filterByName) : true))\n            // ordena planetas filtrados ou não\n            .sort((prevPlanet, nextPlanet) => getSort(prevPlanet, nextPlanet, order))\n            // retorna as linhas da tabela para cada item do array filtrado/ordenado\n            .map((planetFilterByNumeric, index) => (\n              <tr\n                key={ Math.random().toString().substr(2, maxDecimalPlaces) }\n                className={ index % 2 === 0 ? 'table-active table__row' : 'table__row' }\n              >\n                <TableRows planet={ planetFilterByNumeric } />\n              </tr>\n            ))\n        )}\n    </tbody>\n  );\n}\n\nexport default PlanetInfos;\n","export default function getFilterByNumericValues(planet, filterByNumericValues) {\n  const { column, comparison, value } = filterByNumericValues;\n  if (comparison === 'igual a') return Number(planet[column]) === Number(value);\n  if (comparison === 'menor que') return Number(planet[column]) < Number(value);\n  if (comparison === 'maior que') return Number(planet[column]) > Number(value);\n  return true;\n}\n","export default function getSort(prevPlanet, nextPlanet, order) {\n  if (order.sort === 'ASC') {\n    return prevPlanet[order.column] - nextPlanet[order.column];\n  }\n  if (order.sort === 'DESC') {\n    return nextPlanet[order.column] - prevPlanet[order.column];\n  }\n  return prevPlanet.name.localeCompare(nextPlanet.name); // consultei o código do Gabriel Benedicto localeCompare ✔️\n}\n","import React from 'react';\nimport PlanetInfos from './PlanetInfos';\n\nfunction Table() {\n  return (\n    <div className=\"div__table table-responsive\">\n      <table className=\"table m-5 table-bordered align-middle table-sm\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation Period</th>\n            <th>Orbital Period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface Water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>URL</th>\n          </tr>\n        </thead>\n        <PlanetInfos />\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport './App.css';\nimport FilterField from './components/FilterField';\nimport LoadingInitial from './components/LoadingInitial';\nimport SortField from './components/SortField';\nimport Table from './components/Table';\nimport { Provider } from './Context/PlanetsProvider';\n\nfunction App() {\n  return (\n    <Provider>\n      <LoadingInitial />\n      <div className=\"container pb-8\">\n        <section className=\"section__header font-bold\">\n          <FilterField />\n          <SortField />\n        </section>\n        <div className=\"div__table font-bold bg-white\">\n          <Table />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}